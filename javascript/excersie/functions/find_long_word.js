function port(reciever){
        // Remove Puntuation and splt the string into words
        
        const words = reciever.match(/\b\w+\b/g)
        // console.log(`${words}`); 

        if(!words || words.length === 0){
                return null ; 
        }

       let  largest = words[0];
       for(let i=1;i<words.length;i++){
         if(words[i].length > largest.length){
                largest = words[i];      
         }
       }
     return largest
}
console.log(`${port('Web Development Design')}`);


/*
   ЁЯЯй 1. function port(receiver) {

рд╣рдордиреЗ рдПрдХ function рдмрдирд╛рдпрд╛ рд╣реИ рдЬрд┐рд╕рдХрд╛ рдирд╛рдо рд╣реИ portред

рдпрд╣ function рдПрдХ input рд▓реЗрддрд╛ рд╣реИ тАФ receiver рдирд╛рдо рдХрд╛ рдЯреЗрдХреНрд╕реНрдЯ/рд╕реНрдЯреНрд░рд┐рдВрдЧред

ЁЯЯй 2. const words = receiver.match(/\b\w+\b/g);

рдпрд╣ рд▓рд╛рдЗрди input рдореЗрдВ рд╕реЗ рд╕рд┐рд░реНрдл рд╢рдмреНрдж (words) рдирд┐рдХрд╛рд▓рддреА рд╣реИред

/\b\w+\b/g рдПрдХ regex (regular expression) рд╣реИ, рдЬреЛ рдЯреЗрдХреНрд╕реНрдЯ рдореЗрдВ рд╕реЗ рд╢рдмреНрджреЛрдВ рдХреЛ рдкрд╣рдЪрд╛рдирддрд╛ рд╣реИред

рдЗрд╕рд╕реЗ punctuation (рдЬреИрд╕реЗ рдХрд┐ , . ! ?) рд╣рдЯ рдЬрд╛рддреЗ рд╣реИрдВ рдФрд░ рд╣рдореЗрдВ рдПрдХ-рдПрдХ рд╢рдмреНрдж рдХреА list рдорд┐рд▓рддреА рд╣реИред

ЁЯСЙ рдЙрджрд╛рд╣рд░рдг: "Web Development Design" тЮЭ ["Web", "Development", "Design"]

ЁЯЯй 3. if (!words || words.length === 0) { return null; }

рдпрд╣ check рдХрд░ рд░рд╣рд╛ рд╣реИ рдХрд┐ рдЕрдЧрд░ words рдЦрд╛рд▓реА рд╣реИрдВ (рдпрд╛рдирд┐ рдХреЛрдИ рд╢рдмреНрдж рдорд┐рд▓рд╛ рд╣реА рдирд╣реАрдВ), рддреЛ null рд╡рд╛рдкрд╕ рдХрд░ рджреЛред

ЁЯЯй 4. let largest = words[0];

рд╕рдмрд╕реЗ рдкрд╣рд▓рд╛ рд╢рдмреНрдж (words[0]) рдХреЛ рд╣рдо рдорд╛рди рд▓реЗрддреЗ рд╣реИрдВ рдХрд┐ рдпрд╣реА рд╕рдмрд╕реЗ рдмрдбрд╝рд╛ рд╣реИ тАФ рдЕрднреА рдХреЗ рд▓рд┐рдПред

ЁЯЯй 5. for (let i = 1; i < words.length; i++) { ... }

рдЕрдм рд╣рдо рдмрд╛рдХреА рд╕рд╛рд░реЗ рд╢рдмреНрджреЛрдВ рдХреЛ рдПрдХ-рдПрдХ рдХрд░рдХреЗ рдЪреЗрдХ рдХрд░рддреЗ рд╣реИрдВ (index 1 рд╕реЗ рд╢реБрд░реВ рдХрд░рдХреЗ)ред

ЁЯЯй 6. if (words[i].length > largest.length) { largest = words[i]; }

рдЕрдЧрд░ рдХрд┐рд╕реА рд╢рдмреНрдж рдХреА рд▓рдВрдмрд╛рдИ (length) рдЕрднреА рдХреЗ рд╕рдмрд╕реЗ рдмрдбрд╝реЗ рд╢рдмреНрдж рд╕реЗ рдЬреНрдпрд╛рджрд╛ рд╣реИ,

рддреЛ рд╣рдо рдЙрд╕реЗ рдирдпрд╛ рд╕рдмрд╕реЗ рдмрдбрд╝рд╛ рд╢рдмреНрдж рдорд╛рди рд▓реЗрддреЗ рд╣реИрдВ (largest = words[i])ред

ЁЯЯй 7. return largest;

рд▓реВрдк рдХреЗ рдмрд╛рдж рд╣рдорд╛рд░реЗ рдкрд╛рд╕ рд╕рдмрд╕реЗ рдмрдбрд╝рд╛ рд╢рдмреНрдж рд╣реЛрддрд╛ рд╣реИ тАФ рд╡рд╣реА рд╣рдо return рдХрд░рддреЗ рд╣реИрдВред

ЁЯЯй 8. console.log(port('Web Development Design'));

рдЕрдм рд╣рдо function рдХреЛ рдЪрд▓рд╛рдХрд░ рдЙрд╕рдХрд╛ result console рдореЗрдВ рджрд┐рдЦрд╛рддреЗ рд╣реИрдВред

рдЗрд╕рдореЗрдВ input string рд╣реИ: 'Web Development Design'

*/